{
	"variables": [],
	"info": {
		"name": "zazie",
		"_postman_id": "57679343-2467-918c-ed5c-1cfb770b467c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "fibonacci",
			"description": "",
			"item": [
				{
					"name": "fibonacci",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/fibonacci/?number=1",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "posts",
			"description": "",
			"item": [
				{
					"name": "getPostById",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/posts/2",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getAllPosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/posts",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getPostsByUserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/posts?userId=1",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "threads",
			"description": "",
			"item": [
				{
					"name": "threads",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/threads/deadlock",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getThreadsStatus",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/threads/status",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"description": "\n",
			"item": [
				{
					"name": "getAllUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/users/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested."
					},
					"response": []
				},
				{
					"name": "addUser",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"response has data\"] = responseJSON && responseJSON.data && (responseJSON.data.length === 256);\ntests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/users/",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"userId\": \"user1\",\n\"email\": \"user1@acme.com\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getByUserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/users/zazie",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "deleteByUserId",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains files\"] = responseBody.has(\"files\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains form\"] = responseBody.has(\"form\");\ntests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\ntests[\"Data has been passed\"] = (responseJSON && responseJSON.data && responseJSON.data.length)"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/users/zazie",
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "wordCount",
			"description": "",
			"item": [
				{
					"name": "countWords",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
							}
						}
					],
					"request": {
						"url": "http://localhost:9090/countWords",
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Duis posuere augue vel cursus pharetra. Duis posuere augue vel cursus pharetra,\nDuis posuere augue vel cursus ! posuere augue vel cursus pharetra,\nDuis \nDuis."
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "home",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Body contains headers\"] = responseBody.has(\"headers\");\ntests[\"Body contains args\"] = responseBody.has(\"args\");\ntests[\"Body contains url\"] = responseBody.has(\"url\");\n\nvar responseJSON;\n\ntry { responseJSON = JSON.parse(responseBody); }\ncatch (e) { }\n\n\ntests[\"Args key contains argument passed as url parameter\"] = 'test' in responseJSON.args"
					}
				}
			],
			"request": {
				"url": "http://localhost:9090",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"description": ""
			},
			"response": []
		}
	]
}